name: CMake

on:
  push:
    branches: [ "main" ] #definiramo kdaj se bo skripta izvedla torej ob pushu na main vejo

env:
  BUILD_TYPE: Release

jobs:
  check_test_file:
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix: #vkljucimo matriko
        os: [ubuntu-latest, windows-latest, macos-latest] #operacijski sistemi na katerih se bo izvajala skripta
    steps:
    - name: Checkout repository 
      uses: actions/checkout@v3 # zagotovimo dostop do kode

    - name: Check if test script exists # preverimo ce obstaja testna skripta in zapisemo vsebino v napaka.txt ce testna skripta ne obstaja
      shell: bash
      run: |
        if [ ! -f "test.cpp" ]; then
          echo "Test file not found" > napaka.txt
        fi

  build_and_test:
    needs: check_test_file  
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3

    - name: Check for errors #preverimo ce obstaja napaka.txt in nato njeno vsebino, ce je prisllo v prvem poslu do ugotovitve da testna skripta ne obstaja prekinemo izvajanje
      shell: bash
      run: |
        if [ -f "napaka.txt" ]; then
          if [ "$(cat napaka.txt)" = "Test file not found" ]; then
            echo "Napaka: Test file not found"
            exit 1
          fi
        fi

    - name: Install CMake #namestitev Cmake na ustrezen OS
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          choco install cmake
        elif [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update && sudo apt-get install -y cmake g++
        else
          brew install cmake
        fi

    - name: Configure CMake 
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{github.workspace}} #konfiguracija Cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} #gradnja projekta ki jo zapisemo v mapo build

    - name: Compile Main
      run: g++ main.cpp test.cpp -o build/main #prevajanje projekta

    - name: Run first test #zazenemo teste z argumenti za algoritem kmp, za windows malenkost drugace torej z dodatnimi narekovaji
      shell: bash
      run: |
          if [ "${RUNNER_OS}" == "Windows" ]; then
            "${{github.workspace}}/build/main" test_kmp "znan" "${GITHUB_WORKSPACE}/cmake-build-debug/test-besedilo.txt"
          else 
           ${{github.workspace}}/build/main test_kmp "znan" ${GITHUB_WORKSPACE}/cmake-build-debug/test-besedilo.txt
          fi

    - name: Run second test #zazenemo teste z argumenti za algoritem sunday search
      shell: bash
      run: |
          if [ "${RUNNER_OS}" == "Windows" ]; then
            "${{github.workspace}}/build/main" test_kmp "znanstveniki" "${GITHUB_WORKSPACE}/cmake-build-debug/test-besedilo.txt"
          else 
            ${{github.workspace}}/build/main test_sunday "znanstveniki" ${GITHUB_WORKSPACE}/cmake-build-debug/test-besedilo.txt
          fi